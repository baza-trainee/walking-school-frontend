{"version":3,"file":"static/js/500.3cd2afa0.chunk.js","mappings":"0MACA,EAAuB,wBAAvB,EAA6D,+BAA7D,EAAwG,6BAAxG,EAAgJ,4B,SC+ChJ,EAhCkB,SAACA,GACjB,IAAQC,EAA6BD,EAA7BC,SAAUC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KAC5B,OACEC,EAAAA,EAAAA,KAAA,OAAK,cAAY,OAAOC,UAAWC,EAAWC,UAC5CC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OACE,cAAY,YACZK,IAAKR,EACLS,IAAKR,EACLG,UAAWC,KAEbF,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAeC,SAAEJ,QAIxC,ECNA,IACA,EAAe,IAA0B,kECDzC,IACA,EAAe,IAA0B,4DCmFzC,IACA,EAAe,IAA0B,gEClFzC,IACA,EAAe,IAA0B,4DC5BzC,EAA4B,8BC2BtBQ,EAnBQ,CACZ,CAAEC,MAAOC,EAAaH,IAAK,wFAAmBP,KAAM,4GACpD,CACES,MAAOE,EACPJ,IAAK,mMACLP,KAAM,yFAER,CACES,MAAOG,EACPL,IAAK,iJACLP,KAAM,yFAER,CACES,MAAOI,EACPN,IAAK,4QACLP,KAAM,qFAImBc,KAAI,SAACC,GAAI,OACpCd,EAAAA,EAAAA,KAACe,EAAS,CAERlB,SAAUiB,EAAKN,MACfV,SAAUgB,EAAKR,IACfP,KAAMe,EAAKf,MAHNe,EAAKf,KAIV,IAkBJ,EAVmB,WACjB,OACEC,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAAAb,UACRH,EAAAA,EAAAA,KAAA,OAAK,cAAY,aAAaC,UAAWC,EAAgBC,SACtDI,KAIT,C","sources":["webpack://walking-school-frontend/./src/components/Adventures/Adventure/Adventure.module.css?28b7","components/Adventures/Adventure/Adventure.jsx","assets/main/adventures/BungeeJumping.svg","assets/main/adventures/FlySpot.svg","assets/main/adventures/Parachuting.svg","assets/main/adventures/SkyWalk.svg","webpack://walking-school-frontend/./src/components/Adventures/Adventures.module.css?9a0b","components/Adventures/Adventures.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Adventure_card__MQosc\",\"cardContent\":\"Adventure_cardContent__P7P69\",\"cardImage\":\"Adventure_cardImage__XTDzr\",\"cardName\":\"Adventure_cardName__wrWjX\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Adventure.module.css\";\r\n\r\n/**\r\n * Component card for representing some activity included in the project\r\n * @component\r\n * @example\r\n * const image = \"pathToImg/img\"\r\n * const altText = \"a man doing bungee jumping\"\r\n * const text = \"bungee jumping\"\r\n * return (\r\n *     <Adventure imageSrc={image} imageAlt={altText} text={text} />\r\n * )\r\n * @returns {React.JSX.Element} react element with specified data\r\n */\r\nconst Adventure = (props) => {\r\n  const { imageSrc, imageAlt, text } = props;\r\n  return (\r\n    <div data-testid=\"card\" className={style.card}>\r\n      <div className={style.cardContent}>\r\n        <img\r\n          data-testid=\"card-icon\"\r\n          src={imageSrc}\r\n          alt={imageAlt}\r\n          className={style.cardImage}\r\n        />\r\n        <h4 className={style.cardName}>{text}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAdventure.propTypes = {\r\n  /**\r\n   * source of the displayed image\r\n   */\r\n  imageSrc: PropTypes.string.isRequired,\r\n  /**\r\n   * alternative description of displayed image\r\n   */\r\n  imageAlt: PropTypes.string.isRequired,\r\n  /**\r\n   * displayed text, name of the displayed activity\r\n   */\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Adventure;\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBungeeJumping(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 36,\n    height: 36,\n    viewBox: \"0 0 36 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.52822 2C4.38813 2 4.25377 2.05619 4.15471 2.15621C4.05565 2.25623 4 2.39188 4 2.53333V15.0667C4 15.5617 4.19478 16.0365 4.54149 16.3866C4.88821 16.7367 5.35845 16.9333 5.84878 16.9333H12.7157C13.1868 16.9342 13.6404 16.753 13.9835 16.4269C14.3266 16.1008 14.5331 15.6546 14.5607 15.1797C14.5684 14.9203 14.5239 14.662 14.4301 14.4204C14.3362 14.1788 14.1949 13.9589 14.0146 13.7739C13.8343 13.5889 13.6188 13.4427 13.381 13.3441C13.1432 13.2454 12.8882 13.1964 12.6311 13.2H8.48988C8.38567 13.2006 8.28238 13.1803 8.186 13.1403C8.08961 13.1003 8.00205 13.0414 7.92838 12.9669C7.81748 12.8476 7.74482 12.6973 7.71989 12.5357C7.69496 12.374 7.71894 12.2085 7.78867 12.0608C7.85841 11.9132 7.97067 11.7902 8.11076 11.7079C8.25085 11.6257 8.41226 11.5881 8.57387 11.6H12.7157C13.1868 11.6008 13.6404 11.4196 13.9835 11.0936C14.3266 10.7675 14.5331 10.3213 14.5607 9.8464C14.5684 9.58698 14.5239 9.32868 14.4301 9.08707C14.3362 8.84546 14.1949 8.62554 14.0146 8.44055C13.8343 8.25557 13.6188 8.10936 13.381 8.01073C13.1432 7.9121 12.8882 7.8631 12.6311 7.86667H11.6592C11.5077 7.86976 11.3586 7.82775 11.2306 7.74587C11.1026 7.66399 11.0013 7.54587 10.9393 7.40624C10.8774 7.26661 10.8575 7.11165 10.8822 6.96068C10.9069 6.80972 10.975 6.66944 11.0782 6.55733C11.1638 6.46582 11.2669 6.39285 11.3813 6.34288C11.4958 6.29291 11.6191 6.26698 11.7437 6.26667H16.6773V21.696C16.6772 21.7668 16.6632 21.8369 16.636 21.9022C16.6088 21.9675 16.569 22.0267 16.5189 22.0763L10.4285 28.2256C10.1364 28.5156 9.93545 28.8861 9.85059 29.2907C9.76573 29.6954 9.80074 30.1163 9.95126 30.5009C10.1018 30.8856 10.3612 31.217 10.697 31.4538C11.0329 31.6906 11.4304 31.8223 11.8399 31.8325C12.1452 31.8412 12.4491 31.7865 12.7328 31.6719C13.0164 31.5574 13.2738 31.3853 13.489 31.1664L17.8891 26.7237C17.9633 26.6502 18.0574 26.6005 18.1595 26.5808C18.2616 26.561 18.3672 26.5722 18.4631 26.6128C18.559 26.6534 18.6409 26.7217 18.6985 26.809C18.7561 26.8964 18.7869 26.999 18.787 27.104V27.3541C18.4569 27.6546 18.1926 28.0215 18.0112 28.4313C17.8298 28.841 17.7353 29.2845 17.7338 29.7333V30.8C17.7338 31.6487 18.0677 32.4626 18.662 33.0627C19.2564 33.6629 20.0625 34 20.9031 34C21.7437 34 22.5498 33.6629 23.1441 33.0627C23.7385 32.4626 24.0724 31.6487 24.0724 30.8V29.7333C24.0747 29.2838 23.9817 28.839 23.7994 28.4289C23.6172 28.0188 23.35 27.6529 23.016 27.3557C23.016 27.1099 22.9716 26.7643 23.3435 26.6091C23.4391 26.5674 23.545 26.5561 23.6472 26.5765C23.7493 26.597 23.8429 26.6483 23.9155 26.7237L28.3156 31.1664C28.5321 31.3836 28.7897 31.5545 29.073 31.669C29.3564 31.7834 29.6596 31.839 29.9647 31.8325C30.3744 31.8226 30.772 31.691 31.108 31.4542C31.4441 31.2175 31.7035 30.886 31.8541 30.5012C32.0047 30.1165 32.0396 29.6954 31.9546 29.2907C31.8696 28.886 31.6684 28.5156 31.3761 28.2256L25.2873 22.0763C25.2372 22.0267 25.1974 21.9675 25.1702 21.9022C25.143 21.8369 25.129 21.7668 25.1289 21.696V4.4C25.1292 3.90333 24.9764 3.41887 24.6917 3.01381C24.4071 2.60874 24.0046 2.30314 23.5402 2.13938C23.0758 1.97561 22.5724 1.9618 22.0999 2.09986C21.6274 2.23792 21.2091 2.52101 20.9031 2.90987C20.5971 2.52101 20.1788 2.23792 19.7063 2.09986C19.2337 1.9618 18.7304 1.97561 18.266 2.13938C17.8016 2.30314 17.3991 2.60874 17.1145 3.01381C16.8298 3.41887 16.677 3.90333 16.6773 4.4V5.2H11.7437C11.4868 5.19643 11.2318 5.24541 10.9941 5.34397C10.7564 5.44254 10.541 5.58865 10.3607 5.77352C10.1804 5.95839 10.039 6.17818 9.94511 6.41967C9.85118 6.66115 9.80663 6.91934 9.81414 7.17867C9.8414 7.65379 10.0478 8.10035 10.3909 8.42666C10.734 8.75297 11.1879 8.93427 11.6592 8.93333C12.6417 8.93333 12.9549 8.85867 13.2967 9.224C13.3998 9.33611 13.468 9.47639 13.4927 9.62735C13.5174 9.77831 13.4975 9.93327 13.4355 10.0729C13.3736 10.2125 13.2723 10.3307 13.1442 10.4125C13.0162 10.4944 12.8672 10.5364 12.7157 10.5333H8.57387C8.31689 10.5299 8.06188 10.579 7.82419 10.6777C7.58649 10.7764 7.37103 10.9226 7.19076 11.1076C7.0105 11.2925 6.86915 11.5124 6.77524 11.7539C6.68132 11.9955 6.63677 12.2537 6.64428 12.5131C6.67181 12.9881 6.87838 13.4345 7.22158 13.7606C7.56479 14.0867 8.01861 14.2678 8.48988 14.2667H12.6311C12.8826 14.2677 13.1229 14.3728 13.2956 14.5573C13.3987 14.6694 13.4668 14.8096 13.4916 14.9604C13.5163 15.1113 13.4965 15.2661 13.4347 15.4057C13.3728 15.5453 13.2717 15.6635 13.1438 15.7454C13.016 15.8274 12.8671 15.8695 12.7157 15.8667H5.84878C5.63864 15.8667 5.4371 15.7824 5.28851 15.6324C5.13992 15.4823 5.05644 15.2788 5.05644 15.0667V2.53333C5.05644 2.39188 5.00079 2.25623 4.90173 2.15621C4.80267 2.05619 4.66831 2 4.52822 2ZM17.7338 13.7333H24.0724V14.8H17.7338V13.7333ZM24.0724 12.6667H21.4313V6.26667H24.0724V12.6667ZM20.3749 12.6667H17.7338V6.26667H20.3749V12.6667ZM23.016 30.8C23.016 31.3658 22.7934 31.9084 22.3971 32.3085C22.0009 32.7086 21.4635 32.9333 20.9031 32.9333C20.3427 32.9333 19.8053 32.7086 19.4091 32.3085C19.0128 31.9084 18.7902 31.3658 18.7902 30.8V29.7333C18.7902 29.1675 19.0128 28.6249 19.4091 28.2248C19.8053 27.8248 20.3427 27.6 20.9031 27.6C21.4635 27.6 22.0009 27.8248 22.3971 28.2248C22.7934 28.6249 23.016 29.1675 23.016 29.7333V30.8ZM30.6292 28.9797C30.8204 29.1723 30.9313 29.4316 30.939 29.7041C30.9468 29.9767 30.8509 30.2419 30.671 30.4453C30.5632 30.5498 30.4362 30.6319 30.297 30.6868C30.1578 30.7417 30.0093 30.7683 29.86 30.7653C29.7106 30.7622 29.5633 30.7294 29.4265 30.6689C29.2896 30.6083 29.166 30.5211 29.0625 30.4123L24.6624 25.9696C24.4632 25.7686 24.2144 25.6248 23.9417 25.5531C23.6691 25.4814 23.3825 25.4844 23.1114 25.5618C22.8403 25.6392 22.5945 25.7881 22.3994 25.9933C22.2043 26.1984 22.0668 26.4524 22.0013 26.7291C21.2916 26.4704 20.5146 26.4704 19.8049 26.7291C19.7394 26.4524 19.6019 26.1984 19.4068 25.9933C19.2117 25.7881 18.9659 25.6392 18.6948 25.5618C18.4237 25.4844 18.1371 25.4814 17.8644 25.5531C17.5918 25.6248 17.343 25.7686 17.1437 25.9696L12.7437 30.4123C12.6505 30.5161 12.538 30.6005 12.4125 30.6604C12.2871 30.7204 12.1512 30.7548 12.0126 30.7617C11.874 30.7687 11.7354 30.748 11.6047 30.7008C11.474 30.6537 11.3538 30.581 11.2509 30.4869C11.148 30.3929 11.0645 30.2793 11.0051 30.1526C10.9457 30.026 10.9116 29.8888 10.9048 29.7488C10.8979 29.6088 10.9184 29.4689 10.9651 29.3369C11.0118 29.205 11.0838 29.0836 11.1769 28.9797L17.2673 22.8304C17.4156 22.6819 17.5331 22.5051 17.6132 22.3104C17.6933 22.1157 17.7342 21.9068 17.7338 21.696V15.8667H24.0724V21.696C24.072 21.9068 24.1129 22.1157 24.193 22.3104C24.2731 22.5051 24.3906 22.6819 24.5388 22.8304L30.6292 28.9797ZM22.7519 3.06667C23.1021 3.06667 23.438 3.20714 23.6856 3.45719C23.9333 3.70724 24.0724 4.04638 24.0724 4.4V5.2H21.4313V4.4C21.4313 4.04638 21.5704 3.70724 21.8181 3.45719C22.0658 3.20714 22.4016 3.06667 22.7519 3.06667ZM17.7338 4.4C17.7338 4.04638 17.8729 3.70724 18.1205 3.45719C18.3682 3.20714 18.7041 3.06667 19.0543 3.06667C19.4046 3.06667 19.7404 3.20714 19.9881 3.45719C20.2357 3.70724 20.3749 4.04638 20.3749 4.4V5.2H17.7338V4.4Z\",\n    fill: \"#1D7D74\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBungeeJumping);\nexport default __webpack_public_path__ + \"static/media/BungeeJumping.a9ff6ddaad1ff2299bdccad591fdc0fc.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFlySpot(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 36,\n    height: 36,\n    viewBox: \"0 0 36 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.9008 20.0727C32.9504 19.9748 33 19.8281 33 19.6813L32.6528 9.11527C32.7024 7.20751 31.7104 5.83784 30.0736 5.49542C29.0816 5.29975 28.0896 5.59325 27.3952 6.18026C26.9488 5.49542 26.2048 4.95733 25.312 4.76166C24.32 4.566 23.3776 4.8595 22.6336 5.4465C22.1872 4.71275 21.4432 4.22358 20.5504 4.02791C19.4096 3.88116 18.2192 4.32141 17.5248 5.153C16.7808 4.32141 15.64 3.88116 14.4992 4.12574C13.6064 4.32141 12.8624 4.81058 12.416 5.54434C11.672 4.95733 10.7296 4.66383 9.7376 4.8595C8.8448 5.00625 8.1008 5.54434 7.6544 6.27809C6.9104 5.69109 5.968 5.39758 4.976 5.59325C3.3392 5.83784 2.2976 7.25643 2.3472 9.11527L2 19.7792C2 20.0238 2.0992 20.2683 2.2976 20.4151C2.496 20.5618 2.744 20.6108 2.992 20.5129C3.0416 20.464 3.6368 20.2683 4.6288 19.9748C4.6288 19.9748 16.9792 30.7855 17.0288 30.8344C17.2768 31.0301 17.7728 31.079 18.0208 30.8344L30.4704 19.9259C30.9664 20.0727 31.512 20.2683 32.008 20.4151C32.4048 20.5618 32.752 20.3662 32.9008 20.0727ZM29.8256 6.96293C30.8672 7.1586 31.2144 8.18585 31.1648 9.11527L31.4624 18.703C30.272 18.3117 29.1312 18.0182 27.8912 17.7247V7.89235C28.288 7.20751 29.0816 6.81618 29.8256 6.96293ZM25.064 6.22917C25.808 6.37592 26.4032 6.96293 26.4528 7.7456V17.4312C25.3616 17.2355 24.2208 17.0887 23.1792 16.942V7.1586C23.5264 6.47376 24.32 6.08242 25.064 6.22917ZM22.2368 18.3606L17.5248 28.5353L12.8624 18.5073C15.64 18.2138 18.864 18.0671 22.2368 18.3606ZM20.3024 5.54434C21.0464 5.69109 21.6416 6.32701 21.6912 7.06076V16.8442C20.5008 16.7463 19.36 16.6974 18.2688 16.6974V6.81618C18.4672 5.93567 19.36 5.34867 20.3024 5.54434ZM14.7472 5.54434C15.6896 5.34867 16.5824 5.93567 16.7808 6.81618V16.6974C15.5904 16.7463 14.4496 16.7952 13.3584 16.8931V7.10968C13.408 6.32701 14.0032 5.69109 14.7472 5.54434ZM9.9856 6.27809C10.7792 6.13134 11.5232 6.52267 11.8704 7.20751V17.0887C10.68 17.2355 9.5888 17.3822 8.5968 17.5779V7.79452C8.6464 7.01184 9.2416 6.42484 9.9856 6.27809ZM3.8352 9.11527C3.8352 8.23477 4.1328 7.20751 5.1744 6.96293C5.968 6.81618 6.712 7.20751 7.0592 7.89235V17.8225C5.5216 18.1649 4.2816 18.4584 3.488 18.703L3.8352 9.11527ZM11.3248 18.6541L15.392 27.4591L6.3648 19.5835C7.704 19.2411 9.3904 18.9476 11.3248 18.6541ZM19.6576 27.4591L23.7744 18.5562C25.4112 18.7519 27.0976 19.0454 28.7344 19.4857L19.6576 27.4591Z\",\n    fill: \"#1D7D74\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlySpot);\nexport default __webpack_public_path__ + \"static/media/FlySpot.b405aa55f33577adf78d5fd3e1740206.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgParachuting(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 36,\n    height: 36,\n    viewBox: \"0 0 36 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_567_16038\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 2,\n    y: 3,\n    width: 31,\n    height: 31\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 3H33V34H2V3Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_567_16038)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.7031 18.2969C26.6407 19.2344 28.1606 19.2344 29.0981 18.2969L30.2969 17.0981C31.2344 16.1606 31.2344 14.6406 30.2969 13.7031C29.3594 12.7656 27.8394 12.7656 26.9019 13.7031L25.7031 14.9019C24.7656 15.8394 24.7656 17.3593 25.7031 18.2969Z\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 18L27.7404 15.4127C27.2598 14.8624 26.4806 14.8624 26 15.4127\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 18.391V23H12.2141C11.5179 23 10.8326 22.8128 10.2203 22.4555C9.60799 22.0981 9.088 21.5818 8.70736 20.9533L6 16.4771L8.05553 15L10.932 19.4099H13.1779C13.9165 18.7513 14.845 18.391 15.8035 18.391H17Z\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 23H22.4948C22.9681 23 23.4361 22.9109 23.8679 22.7385C24.2997 22.5662 24.6855 22.3145 25 22\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 16.0474C3.70863 17.0325 5.14113 17.2964 6.1996 16.637L8 15.5153L7.13129 14.3076C6.90244 13.9895 6.43986 13.9042 6.09804 14.1172L3 16.0474Z\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 18L20.8742 17.4157C22.2347 17.1392 23.6159 17 25 17\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34 21.6563C34 22.3984 33.3938 23 32.6828 23C29.295 23 26.0021 21.7147 23.4593 19.3799C22.9292 18.8931 22.8382 18.0508 23.2902 17.4845C23.7571 16.8996 24.5911 16.8365 25.1334 17.3376C27.2096 19.2561 29.9099 20.3127 32.6828 20.3127C33.3938 20.3127 34 20.9143 34 21.6563Z\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 18V23\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 20L17 23\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.3957 9H14.5072C15.3316 9 16 8.29379 16 7.42261C16 6.58457 15.3815 5.89958 14.6006 5.84854C14.4233 4.50265 13.3304 3.46645 12.0079 3.46645C11.4101 3.46562 10.8303 3.68187 10.3655 4.07898C9.96067 3.42921 9.26452 3 8.47325 3C7.2733 3 6.29196 3.98647 6.21451 5.23367C5.86535 4.94571 5.435 4.78957 4.99208 4.79014C3.89189 4.79014 3 5.73253 3 6.8951C3 8.0576 3.89189 9 4.99208 9H6.85071\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.5072 33C30.3316 33 31 32.2938 31 31.4226C31 30.5846 30.3815 29.8996 29.6006 29.8485C29.4234 28.5027 28.3304 27.4664 27.0079 27.4664C26.3858 27.4664 25.8147 27.6961 25.3655 28.079C24.9607 27.4292 24.2646 27 23.4732 27C22.2733 27 21.292 27.9865 21.2146 29.2337C20.8654 28.9457 20.4351 28.7896 19.9921 28.7901C18.8919 28.7901 18 29.7325 18 30.8951C18 32.0576 18.8919 33 19.9921 33H29.5072Z\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25 18V17.2563C25 16.0102 23.85 15 22.4315 15H17.7075C16.7645 15 16 15.6716 16 16.5C16 17.3284 16.7645 18 17.7075 18H18.8012\",\n    stroke: \"#1D7D74\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgParachuting);\nexport default __webpack_public_path__ + \"static/media/Parachuting.5b16ad7768669f7faad6304c94e07c63.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSkyWalk(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 36,\n    height: 36,\n    viewBox: \"0 0 36 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.84752 11.996C8.89901 11.9986 8.95091 12 9.0022 12C10.5996 12 11.9147 10.7492 11.9961 9.15246C12.0802 7.5004 10.8046 6.08795 9.15246 6.00401C9.10117 6.0014 9.04908 6 8.99779 6C7.40017 6 6.08506 7.25077 6.00392 8.84754C5.91997 10.4996 7.19541 11.912 8.84752 11.996ZM6.77307 8.8866C6.83358 7.69975 7.8107 6.77013 8.99779 6.77013C9.03605 6.77013 9.07492 6.77114 9.11339 6.77314C10.3414 6.83565 11.2894 7.88547 11.2269 9.1134C11.1664 10.3003 10.1893 11.2299 9.0022 11.2299C8.96393 11.2299 8.92506 11.2289 8.88659 11.2269C7.65883 11.1644 6.71076 10.1145 6.77307 8.8866Z\",\n    fill: \"#1D7D74\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.8463 12.5224C30.6727 12.3904 30.4223 12.4208 30.2869 12.5902L27.0424 16.6573C26.9448 16.7796 26.8595 16.8842 26.7841 16.9765C26.5036 17.3201 26.3491 17.5094 26.2735 17.7579C26.1968 18.0091 26.2229 18.2435 26.2699 18.6693C26.2842 18.7978 26.3002 18.9433 26.3168 19.1168C26.3458 19.4206 26.3806 19.6612 26.4086 19.8543C26.4242 19.9624 26.4412 20.0796 26.4493 20.165C26.3344 20.1733 26.1565 20.1747 25.9828 20.1759C25.8814 20.1767 25.7664 20.1775 25.6395 20.1796C24.922 20.1909 24.525 20.2217 24.2088 20.3666C23.8767 20.5188 23.6973 20.7614 23.4392 21.1247C23.4579 20.9315 23.439 20.7347 23.3812 20.5431C23.264 20.1547 23.0018 19.8331 22.6417 19.6339C22.6214 19.6171 22.599 19.6019 22.5747 19.589L18.8689 17.6136C18.8689 17.6136 18.8687 17.6136 18.8687 17.6134C18.4707 17.3855 18.0185 17.2874 17.5587 17.3295C17.5572 17.3297 17.5558 17.3297 17.5543 17.3299C17.5522 17.3301 17.5502 17.3301 17.5483 17.3303C17.5429 17.3309 17.5377 17.3319 17.5323 17.3325C17.527 17.3333 17.5216 17.3335 17.516 17.3345L14.043 17.9506L13.4484 16.414L15.8464 13.7862L16.8919 13.5987C16.9935 13.5805 17.0787 13.5259 17.1366 13.4516C17.4171 13.3061 17.6414 13.0776 17.7799 12.7922C17.9503 12.4413 17.9706 12.0466 17.8371 11.6809C17.7168 11.3513 17.4787 11.0751 17.1666 10.9031C17.1405 10.8887 17.114 10.8753 17.087 10.8626L20.43 2.53105C20.5103 2.33109 20.4093 2.10522 20.2043 2.02689C19.9994 1.94857 19.7681 2.04713 19.6878 2.2473L16.2874 10.7227C16.2426 10.727 16.1978 10.7335 16.1533 10.7418L10.2717 11.6612H10.2713C9.91675 11.7153 9.58173 11.8353 9.27572 12.0178C8.59925 12.4214 8.1587 13.0733 8.02228 13.793L5.97814 16.9589C5.97606 16.9619 5.97461 16.9651 5.97275 16.9684C5.97088 16.9716 5.9686 16.9745 5.96673 16.9777C5.96383 16.983 5.96114 16.9884 5.95803 16.9937C5.74615 17.3752 5.67338 17.819 5.75382 18.2461V18.2469L6.42677 21.7896V21.7908C6.49477 22.1509 6.69172 22.4668 6.98508 22.6903C6.90505 23.2756 6.87851 23.8852 6.85094 24.5268C6.76947 26.4127 6.68529 28.3627 5.14182 29.6321C4.97348 29.7706 4.95192 30.0161 5.09372 30.1802C5.1725 30.2715 5.28528 30.3187 5.39868 30.3187C5.48928 30.3187 5.5805 30.2887 5.65514 30.2272C7.46667 28.7374 7.56245 26.5179 7.64704 24.5596C7.67067 24.0125 7.69348 23.4895 7.74945 22.9969C7.80543 23.003 7.86182 23.0062 7.91842 23.0062C8.01067 23.0062 8.10355 22.9979 8.19602 22.9813C8.59531 22.9098 8.94236 22.6907 9.1729 22.3644C9.40343 22.0381 9.49009 21.6437 9.4167 21.2539C9.41649 21.2527 9.41608 21.2516 9.41587 21.2504L9.41525 21.2468L9.34518 20.91L10.1813 19.9938L10.467 20.6643C10.4674 20.6651 10.4676 20.6657 10.468 20.6663C10.5087 20.7655 10.5578 20.8613 10.6148 20.9525C10.842 21.3156 11.1853 21.5917 11.5904 21.7412C11.6918 21.8691 11.7975 21.9969 11.9082 22.1302C12.3805 22.6992 12.8687 23.2875 12.9931 23.9066L13.3474 28.9333C13.3454 28.9523 13.3443 28.9715 13.3452 28.9912C13.3568 29.2483 13.4349 29.4983 13.5724 29.718C13.7894 30.0645 14.1315 30.3079 14.536 30.4031C14.6565 30.4316 14.7801 30.446 14.9042 30.4462C15.1874 30.4462 15.466 30.3703 15.7138 30.2223C16.1379 29.9693 16.413 29.5275 16.4537 29.0478C16.464 29.0142 16.4701 28.9788 16.4707 28.942L16.559 23.4642C16.559 23.4614 16.5588 23.4585 16.5588 23.4555C16.5588 23.4531 16.559 23.4506 16.559 23.4482C16.5389 22.6641 16.3067 22.1796 15.9644 21.6931C15.9634 21.6914 15.9619 21.69 15.9609 21.6886C15.9567 21.6829 15.9524 21.6777 15.948 21.6722C15.9437 21.667 15.9393 21.6615 15.9348 21.6564C15.9335 21.655 15.9323 21.6534 15.931 21.652L15.5089 21.1978L17.6824 20.8382C17.6994 20.8353 17.7158 20.8313 17.7318 20.8264C17.7527 20.8252 17.7737 20.823 17.7948 20.8183C17.9712 20.7802 18.1557 20.8085 18.3117 20.8975C18.3139 20.8989 18.3164 20.8999 18.3187 20.9011C18.3301 20.9086 18.3419 20.9155 18.3542 20.9219L21.1146 22.3512C21.1384 22.3636 21.1629 22.3731 21.1878 22.3804C21.3998 22.4777 21.6279 22.5271 21.8578 22.5271C22.0081 22.5271 22.1593 22.5061 22.3075 22.4634C22.3489 22.4514 22.3896 22.4377 22.4296 22.4227C22.3398 22.5298 22.2571 22.6273 22.1816 22.7162C21.7065 23.276 21.4446 23.5844 21.3001 24.0637C21.16 24.528 21.1536 25.0963 21.1538 26.1439C21.1538 26.4625 21.1639 26.7213 21.1722 26.9294C21.1789 27.098 21.1857 27.2708 21.1801 27.3742C21.0598 27.3773 20.8471 27.3621 20.6402 27.3471C20.4814 27.3356 20.3013 27.3226 20.0902 27.3107L20.0154 27.3064C19.3265 27.2676 18.9807 27.2482 18.6834 27.3516C18.3434 27.4698 18.1659 27.7147 17.8972 28.0855C17.7795 28.2482 17.6327 28.4506 17.4347 28.6989L13.708 33.3718C13.5728 33.5414 13.6039 33.7857 13.7774 33.9178C13.8502 33.9731 13.9364 34 14.022 34C14.1406 34 14.2582 33.9484 14.3368 33.85L18.0639 29.178C18.2733 28.9157 18.4259 28.705 18.5484 28.5358C18.7619 28.2409 18.8525 28.1199 18.951 28.0857C19.0961 28.0353 19.4252 28.0537 19.97 28.0844L20.045 28.0887C20.2497 28.1002 20.4261 28.113 20.5818 28.1243C21.1844 28.1678 21.5164 28.1919 21.7616 27.9608C22.0019 27.7343 21.9897 27.4206 21.9691 26.9006C21.9613 26.6993 21.9513 26.4485 21.9513 26.1449C21.9511 25.1143 21.9619 24.627 22.0651 24.2847C22.1634 23.9589 22.3616 23.7253 22.7959 23.2138C22.992 22.9829 23.2359 22.6955 23.5288 22.3286C23.7645 22.0333 23.9335 21.7951 24.0691 21.6038C24.3035 21.2735 24.4043 21.1369 24.5471 21.0715C24.7298 20.9879 25.0764 20.9671 25.6523 20.9582C25.7759 20.9561 25.8891 20.9553 25.989 20.9545C26.5849 20.9499 26.8838 20.9476 27.0971 20.706C27.3028 20.473 27.2611 20.1838 27.1979 19.7462C27.1711 19.561 27.1378 19.3305 27.1104 19.0449C27.0932 18.8658 27.0768 18.7173 27.0623 18.5863C27.0262 18.2609 27.0065 18.0818 27.0372 17.9806C27.0689 17.8767 27.1892 17.7294 27.4075 17.4618C27.484 17.3679 27.5709 17.2617 27.6712 17.136L30.9159 13.0689C31.0511 12.8989 31.02 12.6546 30.8463 12.5224ZM13.1304 15.5929L12.6525 14.3583L14.5704 14.0147L13.1304 15.5929ZM8.51736 21.9228C8.40769 22.078 8.24266 22.1822 8.05276 22.2162C7.86286 22.2502 7.67067 22.2102 7.51166 22.1029C7.35265 21.9958 7.24588 21.8347 7.21105 21.6493V21.6487L6.5381 18.106C6.49042 17.8524 6.53395 17.5885 6.66042 17.3624L8.11641 15.1074C8.11765 15.1106 8.11889 15.1141 8.12035 15.1173C8.1247 15.1517 8.13341 15.1861 8.14771 15.2197L8.80677 16.7664L8.22276 17.6875C8.05131 17.9356 7.98435 18.2449 8.03991 18.5396C8.04011 18.5408 8.04053 18.5418 8.04074 18.5428L8.04136 18.5467L8.63408 21.3964C8.66808 21.5809 8.62682 21.7679 8.51736 21.9228ZM9.14781 19.9573L8.82336 18.3975C8.80532 18.3001 8.82833 18.1979 8.88659 18.117C8.88742 18.116 8.88783 18.1147 8.88866 18.1137C8.89219 18.1087 8.89571 18.1036 8.89903 18.0984L9.18347 17.6498L9.84232 19.1961L9.14781 19.9573ZM15.3228 22.1553C15.5894 22.5383 15.7467 22.8797 15.7625 23.4624L15.676 28.8212C15.6673 28.8533 15.6623 28.8869 15.6625 28.9219C15.6638 29.1802 15.5243 29.4241 15.2985 29.5589C15.1252 29.6623 14.9208 29.6937 14.7234 29.6471C14.5258 29.6006 14.3587 29.4818 14.2528 29.3126C14.2016 29.2306 14.1672 29.1397 14.1514 29.045C14.1522 29.0292 14.1525 29.0132 14.1514 28.997L13.7872 23.8285C13.7872 23.8279 13.787 23.8273 13.787 23.8267C13.7865 23.8202 13.7853 23.8135 13.7845 23.8071C13.7836 23.8002 13.7828 23.7933 13.7818 23.7866C13.7816 23.786 13.7816 23.7854 13.7816 23.7848C13.6302 22.9837 13.0709 22.295 12.5656 21.686L14.577 21.353L15.3228 22.1553ZM22.083 21.7178C21.881 21.7758 21.6681 21.7536 21.483 21.655C21.4681 21.6471 21.4538 21.6388 21.4401 21.6303C21.4065 21.6096 21.3701 21.5938 21.3318 21.5834L18.7282 20.235C18.7234 20.232 18.7188 20.2287 18.7138 20.2259C18.3838 20.0379 17.9967 19.9786 17.6236 20.0587C17.6136 20.061 17.6043 20.0636 17.5947 20.0664C17.5798 20.0672 17.5649 20.0686 17.5498 20.0711L11.8676 21.0114C11.6296 20.9223 11.4285 20.7588 11.2956 20.5465C11.2608 20.4908 11.2309 20.4323 11.2063 20.3716C11.2058 20.3704 11.2052 20.3694 11.2048 20.3684C11.2044 20.3672 11.204 20.3662 11.2036 20.365L8.88327 14.9204C8.88307 14.9198 8.88265 14.9192 8.88244 14.9187C8.87954 14.8947 8.87436 14.8706 8.86648 14.8465C8.77526 14.568 8.7537 14.282 8.79433 14.008C8.79661 13.9973 8.79827 13.9865 8.79952 13.9756C8.88659 13.4516 9.2013 12.9742 9.6916 12.6817C9.90825 12.5526 10.1452 12.4676 10.3961 12.4295C10.3963 12.4295 10.3967 12.4293 10.3969 12.4293C10.3973 12.4293 10.3975 12.4293 10.3979 12.4291L16.2808 11.5094C16.2839 11.509 16.2868 11.508 16.2897 11.5076C16.2922 11.5072 16.2945 11.507 16.2969 11.5066C16.6324 11.4402 16.9718 11.6272 17.0868 11.9419C17.149 12.112 17.1395 12.2953 17.0603 12.4585C16.9811 12.6216 16.8416 12.7448 16.6672 12.8054C16.6345 12.8169 16.6 12.826 16.5654 12.8325C16.5107 12.8428 16.4609 12.8636 16.4174 12.8924L11.2604 13.8165C11.0439 13.8554 10.9007 14.058 10.9403 14.2695C10.9755 14.4571 11.1432 14.5882 11.3317 14.5882C11.3555 14.5882 11.3798 14.5862 11.404 14.5818L11.856 14.5008L13.4082 18.5112C13.4451 18.6068 13.5164 18.6794 13.6031 18.7217C13.6634 18.7567 13.7333 18.7768 13.8062 18.7768C13.8299 18.7768 13.8539 18.7747 13.878 18.7705L17.6393 18.1032C17.9325 18.0777 18.2208 18.1417 18.474 18.2888C18.4769 18.2904 18.4798 18.2918 18.4827 18.2935C18.4841 18.2943 18.4856 18.2953 18.487 18.2961L22.1261 20.2358C22.151 20.2565 22.1783 20.2747 22.209 20.2893C22.219 20.2939 22.2287 20.299 22.2382 20.304C22.423 20.4024 22.5575 20.5651 22.617 20.7623C22.6765 20.9594 22.6537 21.1672 22.5529 21.3478C22.4516 21.5285 22.2849 21.6599 22.083 21.7178Z\",\n    fill: \"#1D7D74\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSkyWalk);\nexport default __webpack_public_path__ + \"static/media/SkyWalk.5d11a414e2666cd4736ed8dec1e167fc.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Adventures_container__YKgax\"};","import React from \"react\";\r\nimport Container from \"../layout/Container/Container\";\r\nimport Adventure from \"./Adventure/Adventure\";\r\nimport Bungee from \"../../assets/main/adventures/BungeeJumping.svg\";\r\nimport Parachuting from \"../../assets/main/adventures/FlySpot.svg\";\r\nimport FlySpot from \"../../assets/main/adventures/Parachuting.svg\";\r\nimport SkyWalk from \"../../assets/main/adventures/SkyWalk.svg\";\r\nimport style from \"./Adventures.module.css\";\r\n\r\nconst cards = [\r\n  { image: Parachuting, alt: \"іконка парашуту\", text: \"Стрибки з парашутом\" },\r\n  {\r\n    image: Bungee,\r\n    alt: \"іконка чоловічка, що стрибає з банджі\",\r\n    text: \"Банджі джампінг\",\r\n  },\r\n  {\r\n    image: FlySpot,\r\n    alt: \"іконка чоловічка, що летить\",\r\n    text: \"Тунельний політ\",\r\n  },\r\n  {\r\n    image: SkyWalk,\r\n    alt: \"іконка чоловічка, що підіймається угору з мотузкою\",\r\n    text: \"Стежка у хмарах\",\r\n  },\r\n];\r\n\r\nconst cardCollection = cards.map((card) => (\r\n  <Adventure\r\n    key={card.text}\r\n    imageSrc={card.image}\r\n    imageAlt={card.alt}\r\n    text={card.text}\r\n  />\r\n));\r\n/**\r\n * A collection of adventure blocks displaying activities\r\n * @component\r\n *\r\n * @returns {React.JSX.Element} a wrapper for a collection of adventure block cards with specified content\r\n */\r\nconst Adventures = () => {\r\n  return (\r\n    <Container>\r\n      <div data-testid=\"adventures\" className={style.container}>\r\n        {cardCollection}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Adventures;\r\n"],"names":["props","imageSrc","imageAlt","text","_jsx","className","style","children","_jsxs","src","alt","cardCollection","image","Parachuting","Bungee","FlySpot","SkyWalk","map","card","Adventure","Container"],"sourceRoot":""}