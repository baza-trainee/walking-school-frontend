import React, { useState } from "react";
import * as Yup from "yup";
import { Form, Formik } from "formik";
import AdminButton from "../../../../components/AdminPanel/UI/Button/AdminButton";
import AdminInput from "../../../../components/AdminPanel/Input/AdminInput";
import styles from "./Forgot.module.css";
import { useNavigate } from "react-router-dom";
import { ReactComponent as Close } from "../../../../assets/admin/close.svg";

const ForgotForm = ({ className, ...props }) => {
  const navigate = useNavigate();
  const [isSent, setIsSent] = useState(true);
  const validationSchema = Yup.object({
    email: Yup.string()
      .test("domain", "–ö–æ—Ä–∞–±–µ–ª—å —Ç–∞–º üñï", (value) => {
        return !value?.endsWith(".ru") && !value?.endsWith(".by");
      })
      .matches(
        /^[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
        "–í–≤–µ–¥—ñ—Ç—å –¥—ñ–π—Å–Ω–∏–π email",
      )
      .required("–í–≤–µ–¥—ñ—Ç—å –¥—ñ–π—Å–Ω–∏–π email"),
  });

  return (
    <div className={styles.wrapper} {...props}>
      <h1>–ó–∞–±—É–ª–∏ –ø–∞—Ä–æ–ª—å</h1>
      <p className={styles.text}>–í–∫–∞–∂—ñ—Ç—å –≤–∞—à email, —â–æ–± –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –æ—Å–æ–±—É </p>
      <Formik
        initialValues={{ email: "" }}
        validationSchema={validationSchema}
        onSubmit={async (values, { setSubmitting, resetForm }) => {
          try {
            setIsSent(true);
          } catch (e) {
            console.log(e);
          } finally {
            setSubmitting(false);
          }
          resetForm();
        }}
        validateOnChange={false}
        validateOnBlur={true}
      >
        {({ values, handleBlur, handleChange, errors, touched, isValid }) => (
          <Form className={styles.login__form}>
            <div className={styles["login__form-input"]}>
              <AdminInput
                id="email"
                name={"email"}
                type={"text"}
                variant={"login"}
                label={"–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞"}
                placeholder={"–í–≤–µ–¥—ñ—Ç—å –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É"}
                value={values.email}
                onChange={handleChange}
                onBlur={handleBlur}
                error={errors.email && touched.email ? errors.email : null}
              />
            </div>
            <div className={styles.submit}>
              <AdminButton
                variant={"secondary"}
                onClick={() => navigate("/login")}
              >
                –°–∫–∞—Å—É–≤–∞—Ç–∏
              </AdminButton>
              <AdminButton
                type={"submit"}
                variant={"primary"}
                disabled={!isValid || !touched.email}
                icon={false}
              >
                –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏
              </AdminButton>
            </div>
          </Form>
        )}
      </Formik>
      {isSent && (
        <div className={styles.message}>
          <div className={styles.close}>
            <Close />
          </div>
          –ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º, –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–º —É –ª–∏—Å—Ç—ñ –Ω–∞ –í–∞—à—É –ø–æ—à—Ç—É
        </div>
      )}
    </div>
  );
};

export default ForgotForm;
